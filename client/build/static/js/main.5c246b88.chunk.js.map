{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/RecipeReviewCard.js","components/IndividualMeal.js","components/Select.js","components/Random.js","components/Home.js","components/NavBar.js","components/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","theme","root","maxWidth","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","props","classes","useState","expanded","setExpanded","Card","className","CardHeader","title","Meal","strMeal","CardMedia","image","strMealThumb","CardContent","CardActions","disableSpacing","IconButton","aria-label","clsx","onClick","aria-expanded","IndividualMeal","React","meal","setMeal","setMealObj","id","parseInt","match","params","getMealByName","a","console","log","fetch","res","json","data","meals","measureNew","ingredNew","obj","propName","i","ingredToString","toString","push","clean","combinedArr","reduce","acc","current","index","useEffect","style","position","left","top","map","ingred","Typography","paragraph","Collapse","in","timeout","unmountOnExit","strInstructions","button","display","marginTop","spacing","formControl","margin","minWidth","center","SelectMenu","setMeals","open","setOpen","category","setCategory","getMealsByCategory","handleOpen","Button","FormControl","InputLabel","Select","labelId","onClose","onOpen","value","onChange","event","preventDefault","target","setFilter","MenuItem","idx","idmeal","to","idMeal","width","src","Component","Home","random","randomIsActive","filter","mealsById","ingredients","measurements","ingredientsLoading","bool","setState","then","examples","this","Navigation","AppBar","Toolbar","color","variant","flexGrow","Login","email","password","e","onSubmit","userData","loginUser","history","nextProps","paddingLeft","noValidate","error","classnames","invalid","emailnotfound","htmlFor","passwordincorrect","borderRadius","letterSpacing","connect","post","setItem","jwt_decode","catch","err","response","component","rest","render","Dashboard","onLogoutClick","name","split","Register","password2","newUser","registerUser","withRouter","jwtToken","currentTime","Date","now","exp","location","href","App","NavBar","path","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5c246b88.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","import {\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n\n  );\nexport default store;","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n//import Collapse from '@material-ui/core/Collapse';\n//import Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n//import FavoriteIcon from '@material-ui/icons/Favorite';\n//import ShareIcon from '@material-ui/icons/Share';\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    marginLeft: \"40%\"\n    //background: red[500]\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\n\n\nexport default function RecipeReviewCard(props) {\n  const classes = useStyles();\n\n//using Hooks\nconst [expanded, setExpanded] = useState(false);\n//const [ ingredients, setIngredients] = useState([]);\n//const [ measurements, setMeasurements] = useState([]);\n//const [ isLoading, setIsLoading] = useState(true);\n// same as above code \n// state = {\n//   ingredients : [],\n//   measurements : [],\n//   ingredientsLoading: true,\n// }\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //     R\n        //   </Avatar>\n        //}\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        // can't resolve MoreVertIcon\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title={props.Meal.strMeal}\n        //subheader=\"September 14, 2016\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.Meal.strMealThumb}\n       // title=\"Paella dish\"\n      />\n      <CardContent>\n                  {/* //font size                           not sure??  */}\n        {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography> */}\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        <IconButton aria-label=\"share\">\n          {/* can't resolve shareIcon */}\n          {/* <ShareIcon /> */}\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          {/* <ExpandMoreIcon /> */}\n        </IconButton>\n      </CardActions>\n      {/* <Collapse in={expanded} timeout=\"auto\" unmountOnExit> */}\n        {/* {<CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            {props.Meal.strInstructions}\n          </Typography>\n          {/*} \n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        </CardContent> */}\n      {/* </Collapse> */}\n    </Card>\n  );\n}\n","import React, {useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\n//import Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n//import ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    //background: red[500]\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst IndividualMeal = (props) => {\n  const classes = useStyles();\n  const [meal, setMeal] = React.useState({});\n  const [mealObj, setMealObj] = React.useState([]);\n  const [open, setOpen] = React.useState(true); //open, setOpen\n  const [mealId, setMealId] = React.useState(\"\");\n\n//Card Component\n  const [expanded, setExpanded] = React.useState(false);\n  const [ingredients, setIngredients] = React.useState([]);\nconst [ measurements, setMeasurements] = React.useState([]);\n//const [ isLoading, setIsLoading] = useState(true);\nconst [combinedState, setCombined] = React.useState()\n\n  let id = parseInt(props.match.params.id)\n const BASE_URL = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i='\n\nconst getMealByName = async () => {\n  try {\n    console.log(id)\n    const res = await fetch(BASE_URL + id);\n    const data = await res.json();\n    setMeal(data.meals[0]);\n    setMealObj(data.meals)\n   //console.log(data)\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconsole.log(meal)\n\n  //let y = [];\n  let measureNew = [];\n  let ingredNew = [];\n  function clean (obj){\n    for (var propName in obj) { \n      if (obj[propName] === null || obj[propName] === \"\") {\n      delete obj[propName];\n      } \n    }\n    // const ingredNew = []\n      for(let i = 1; i <= 20; i++){\n   // `${strMeasure[i] strIngredient[i]}`\n      let toString = i.toString();\n      let ingred = \"strIngredient\";\n      let ingredToString = ingred + toString;\n      console.log(ingredToString);\n      console.log(i)\n      if(obj[ingredToString]){\n        ingredNew.push(`${obj[ingredToString]}`)\n      } else {\n        break;\n      }\n    }\n    console.log(ingredNew)\n\n    // const measureNew = []\n    for(let i = 1; i <= 20; i++){\n // `${strMeasure[i] strIngredient[i]}`\n    let toString = i.toString();\n    let ingred = \"strMeasure\";\n    let ingredToString = ingred + toString;\n    console.log(ingredToString);\n    console.log(i)\n    if(obj[ingredToString]){\n      measureNew.push(`${obj[ingredToString]}`)\n      //   setIngredients(\n      //  `${obj[ingredToString]}`\n      //);\n    } else {\n      break;\n    }\n  }\n  console.log(measureNew)\n  } \n    //y.push(obj)\n\n\nclean(meal)\n\nlet combinedArr = []\nfunction combined(){measureNew.reduce((acc, current, index) => {\n  //return current, ingredNew[index]\n  //let ingredNewIndex = ingredNew[index]\n  console.log(current, ingredNew[index])\n  //let combinedVal =  [current, ingredNew[index]]\n  combinedArr.push(current + \" \" + ingredNew[index]);\n  //setCombined(current + \" \" + ingredNew[index]);\n  }, [])\n}\nconsole.log(combinedArr)\n//setCombined(combinedArr)\n\n//const fooder = combinedArr.map((food) => console.log(food))\n//console.log(fooder)\n\ncombined(meal)\n\nuseEffect(() => {\n  getMealByName();\n  //ingredientsArr(meal);\n}, []);\n\n//Card Component\nconst handleExpandClick = () => {\n  setExpanded(!expanded);\n};\n\n// function styleTest(){\n  const styleObject = {\n    //textAlign: \"center\"\n    position: 'absolute', left: '40%', top: '25%',\n  //}\n}\n\n  return (\n     <div>\n    <Card className={classes.root} style={styleObject}> \n    {/* style={{textAlign: \"center\"}}> */}\n      <CardHeader\n        // avatar={\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //     R\n        //   </Avatar>\n        // }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title={meal.strMeal}\n        //subheader=\"September 14, 2016\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={meal.strMealThumb}\n       // title=\"Paella dish\"\n      />\n      <CardContent>\n       {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography> */}\n            <ul>{combinedArr.map((ingred) => \n                <li>{ingred}</li>\n              )}\n            </ul>\n            <Typography paragraph>\n            {/* {meal.strInstructions} */}\n          </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          {/* can't resolve shareIcon */}\n          {/* <ShareIcon /> */}\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          {/* When I click on the expandMoreIcon it gives me an error*/}\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n       <Collapse in={expanded} timeout=\"auto\" unmountOnExit> \n         <CardContent>\n        <Typography paragraph>\n\n           {/* if ingredients is true return ingredients.map() */}\n          {/* {ingredients && ingredients.map((item, idx) =>{\n              <ul>\n                 <li>{item}</li>\n              </ul> \n          }) */}\n      {/*********** TESTING ARRAYS TO SETSTATE **************/}\n      {/* <ul>{combinedArr.map((ingred) => \n        <li>{ingred}</li>\n      )}\n      </ul> */}\n        </Typography>\n         \n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            {/* props.meal.strIns... undefined */}\n            {/* ****** would like my strInstuctions to work here so that when the ExpandMoreIcon is clicked the instructions show up ****** */}\n            {meal.strInstructions}\n          </Typography>\n           {/*\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        */}    \n              \n        </CardContent> \n      </Collapse>\n    </Card>     \n    </div>\n  )\n}\n\nexport default IndividualMeal;\n","import React, { useEffect }from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Card from './RecipeReviewCard'\nimport { Link } from 'react-router-dom'\nimport IndividualMeal from './IndividualMeal';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  center: {\n    left: '40%'\n  },\n}));\n\n\n\nexport default function SelectMenu(props) {\n  const classes = useStyles();\n          //age, setAge\n  const [meals, setMeals] = React.useState([]);\n  const [open, setOpen] = React.useState(true); //open, setOpen\n  const [category, setCategory] = React.useState(\"\");\n  const [individualMeal, setIndividualMeal] = React.useState(\"\")\n\n  const BASE_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=`;\n\n  const getMealsByCategory = async () => {\n    try {\n      const res = await fetch(BASE_URL + category);\n      const data = await res.json();\n      setMeals(data.meals);\n      console.log(data.meals)\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getMealsByCategory();\n  }, [category]);\n\n  //console.log(filter)\n  //console.log(this.setState({filter: true}))\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    //console.log(filter)\n    //this.setState({filter : true})\n    if(event.target.value){\n      props.setFilter(true);\n    } else{\n      props.setFilter(false);\n    }\n    setCategory(event.target.value);\n  };\n\n  const handleClose = () => {\n   setOpen(false);\n   //console.log(filter)\n   //set state\n    //setCategory(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n    //this.setState({filter: false})\n    //set state\n    //setCategory(true);\n  };\n\n  const selectMeal = (id) => {\n      setIndividualMeal(id);\n      //console.log(id)\n  }\n\n\n  return (\n  \n    <div className={classes.center}>\n      <h1>Recipe Finder</h1>\n      {/* <input\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        placeholder={\"Enter a category\"}\n      /> */}\n\n       <Button className={classes.button} onClick={handleOpen}>\n        \n      </Button>\n      \n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Category</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={category}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\"><em>None</em></MenuItem>\n          <MenuItem value={\"Beef\"}>Beef</MenuItem>\n          <MenuItem value={\"Chicken\"}>Chicken</MenuItem>\n          <MenuItem value={\"Dessert\"}>Dessert</MenuItem> \n          <MenuItem value={\"Lamb\"}>Lamb</MenuItem>   \n          <MenuItem value={\"Pasta\"}>Pasta</MenuItem> \n          <MenuItem value={\"Pork\"}>Pork</MenuItem>\n          <MenuItem value={\"Seafood\"}>Seafood</MenuItem>\n          <MenuItem value={\"Side\"}>Side</MenuItem>\n          <MenuItem value={\"Starter\"}>Starter</MenuItem> \n          <MenuItem value={\"Vegan\"}></MenuItem>\n          <MenuItem value={\"Vegetarian\"}>Vegetarian</MenuItem>\n          <MenuItem value={\"Breakfast\"}>Breakfast</MenuItem>\n          <MenuItem value={\"Goat\"}>Goat</MenuItem>\n        </Select>\n      </FormControl> \n      {meals &&\n        meals.map((meal, idx) => {\n          return ( \n            // <div>\n            //div may be individualmeal component that links to indiMealDetails component\n             <div key={meal.idMeal}> \n            <Link\n            //onClick={() => selectMeal(id)} \n            id={meal.idmeal}//may not need\n            to={`/meal/${meal.idMeal}`}\n            >\n             <h3>{meal.strMeal}</h3> \n               {/* <h3 key={meal.idMeal}>{meal.strMeal}</h3> */}\n              <img style={{width: \"30%\", height: \"auto\"}} src={meal.strMealThumb}/>\n            </Link>\n            </div>\n          )\n        })\n        }\n    </div>\n  );\n}\n\n// return (\n//   <div>\n//   <SelectMenu filter={this.state.filter}/>\n//     <h2>Featured Recipe:</h2>\n//   <h3>{this.state.random.strMeal}</h3>\n//   <img style={{width: \"20%\", height: \"auto\"}} src={this.state.random.strMealThumb}/>\n//   </div>","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Random extends Component {\n\ncomponentDidMount() {\n  console.log(\"Component Did Mount\")\n  fetch('https://www.themealdb.com/api/json/v1/1/random.php')\n  .then(res => res.json())\n  .then(examples => {\n      this.setState({random: examples.meals[0]})\n      //console.log(examples)\n      //console.log(this.state.data.meals.map(x => x.strMeal))\n      console.log(this.state.random)\n      //console.log(this.state.filter)\n\n  }) \n}\n\n}\n\nexport default Random;","import React, { Component, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport SelectMenu from './Select'\nimport Random from './Random'\nimport RecipeReviewCard from './RecipeReviewCard';\n\n\n\nclass Home extends React.Component {\n  state = {\n    random: {},\n    meals: [],\n    randomIsActive: true,\n    filter: false,\n    mealsById: {},\n    ingredients: [],\n    measurements: [],\n    ingredientsLoading: true\n  }\n\n  componentDidMount() {\n    console.log(\"Component Did Mount\")\n    fetch('https://www.themealdb.com/api/json/v1/1/random.php')\n      .then(res => res.json())\n      .then(examples => {\n        this.setState({ random: examples.meals[0] })\n       //console.log(this.state.random)\n      })\n  }\n\n  setFilter = (bool) => {\n    this.setState(state => ({ filter: bool }))\n  }\n\n  render() {\n    {\n      return (\n        <div>\n          {console.log(this.state.filter)}\n          <SelectMenu filter={this.state.filter} setFilter={this.setFilter} />\n          {!this.state.filter && (\n            <RecipeReviewCard \n               Meal={this.state.random}\n                //style={{border: \"1px solid black\"}}\n              //className= \"random-card\"\n            />\n          )\n          }\n\n        </div>\n      );\n    }\n  }\n}\nexport default Home;\n","import React, { Component, Fragment } from 'react'\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport {Link} from 'react-router-dom'\n//import Register from './Register'\n\nconst Navigation = () => {\n  return (\n    <div>\n      <AppBar position=\"relative\">\n          <Toolbar>\n              <IconButton color=\"inherit\">\n                  <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>\n                  Tengo Hambre\n              </Typography>\n              <ul className=\"nav-list\">\n                  <li className=\"nav-list-item\">\n                       <Link to=\"/login\">Login</Link> \n                  </li>   \n                  <li className=\"nav-list-item\">\n                      <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                      <Link to=\"/register\">Register</Link>\n                  </li>\n              </ul>\n          </Toolbar>\n      </AppBar>\n      {/* <Register/> */}\n      </div>\n  )\n}\n\nexport default Navigation","import React, { Component } from 'react'\n//import { Redirect } from 'react-router'\nimport {\n  TextField,\n  Button,\n  Container\n} from '@material-ui/core'\nimport {Link} from 'react-router-dom'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n    state = { \n      // username: '',\n      // password: ''\n      email: \"\",\n      password: \"\",\n      errors: {}\n    }\n\n  // handleTextChange = (e) => {\n  //   const state = { ...this.state }\n  //   state[e.target.name] = e.target.value\n  //   this.setState(state)\n  // }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\nif (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n   // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  // login = (e) => {\n  //   // debugger\n  //   e.preventDefault()\n  //   // set cookie here\n  //   // set loggedIn = true and max-age = 60*1000 (one minute)\n  //   //this.props.loggedIn();\n  //   // document.cookie = \"loggedIn=true;max-age=60*1000\"\n  //   // window.location.replace(\"/\")\n  //   this.props.history.push(\"/\")\n  // }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div className=\"container\">\n      <div style={{ marginTop: \"4rem\" }} className=\"row\">\n        <div className=\"col s8 offset-s2\">\n          <Link to=\"/\" className=\"btn-flat waves-effect\">\n            <i className=\"material-icons left\">keyboard_backspace</i> Back to\n            home\n          </Link>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <h4>\n              <b>Login</b> below\n            </h4>\n            <p className=\"grey-text text-darken-1\">\n              Don't have an account? <Link to=\"/register\">Register</Link>\n            </p>\n          </div>\n          <form noValidate onSubmit={this.onSubmit}>\n            <div className=\"input-field col s12\">\n              <input\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                className={classnames(\"\", {\n                  invalid: errors.email || errors.emailnotfound\n                })}\n              />\n              <label htmlFor=\"email\">Email</label>\n              <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                className={classnames(\"\", {\n                  invalid: errors.password || errors.passwordincorrect\n                })}\n              />\n              <label htmlFor=\"password\">Password</label>\n              <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n            </div>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <button\n                style={{\n                  width: \"150px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  marginTop: \"1rem\"\n                }}\n                type=\"submit\"\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Login\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n      \n      // <div className=\"App\">\n      //   <Container maxWidth=\"sm\">\n      //     <form className=\"login-form\" onSubmit={this.login}>\n      //       <TextField\n      //         required\n      //         onChange={this.handleTextChange}\n      //         value={this.state.username}\n      //         name=\"username\"\n      //         label=\"Username\"\n      //         type=\"text\" />\n      //         <br/>\n      //       <TextField\n      //         required\n      //         onChange={this.handleTextChange}\n      //         value={this.state.password}\n      //         name=\"password\"\n      //         label=\"Password\"\n      //         type=\"password\" />\n      //         <br/>\n      //         <br/>\n      //       <Button\n      //         type=\"submit\"\n      //         className=\"login-button\"\n      //         variant=\"contained\"\n      //         color=\"primary\">Login\n      //       </Button>  \n      //         <br/>\n      //         {/* <br/>   */}\n      //         <Link to=\"/register\">\n      //         {/* <a href=\"/register\"> */}\n      //       <Button\n      //         type=\"submit\"\n      //         className=\"login-button\"\n      //         variant=\"contained\"\n      //         color=\"primary\"\n      //         style={{margin: '10px'}}\n              \n      //         >Register?\n      //         </Button> \n      //         </Link>    \n      //          {/* </a> */}\n      //     </form>\n      //   </Container>\n      // </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Home from \"../../components/Home\"\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user } = this.props.auth;\nreturn (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4 style={{marginTop: \"250px\"}}>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                Welcome to Tengo Hambre!{\" \"}\n                {/* <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏 */}\n              </p>\n            </h4>\n            <Home/>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import React, {Component} from 'react';\n//import ReactDOM from 'react-dom';\nimport {\n  TextField,\n  Button,\n  Container\n} from '@material-ui/core'\n\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\n\n//import axios from 'axios';\n\nclass Register extends Component{\n  //render() {\n    //this.state = {\n\n      componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n      }\n\n    state = {\n      // firstName: '',\n      // lastName : '',\n      // userName : '',\n      // password: ''\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n    onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    };\n\n  onSubmit = e => {\n      e.preventDefault();\n\n  const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n\n      this.props.registerUser(newUser, this.props.history); \n    };\n    \n  // render(){\nrender(){\n    //const { errors } = this.state; is the same as doing const errors = this.state.errors;. \n    const { errors } = this.state;\n  return ( \n \n    <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col s8 offset-s2\">\n        <Link to=\"/\" className=\"btn-flat waves-effect\">\n          {/* <i className=\"material-icons left\">keyboard_backspace</i> Back to\n          home */}\n        <Button>Home</Button>\n        </Link>\n        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n          <h4>\n            <b>Register</b> below\n          </h4>\n          <p className=\"grey-text text-darken-1\">\n            Already have an account? <Link to=\"/login\">Log in</Link>\n          </p>\n        </div>\n        <form noValidate onSubmit={this.onSubmit}>\n          <div className=\"input-field col s12\">\n            <input\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              className={classnames(\"\", {\n                invalid: errors.name\n              })}\n            />\n            <label htmlFor=\"name\">Name</label>\n            <span className=\"red-text\">{errors.name}</span>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames(\"\", {\n                invalid: errors.email\n              })}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <span className=\"red-text\">{errors.email}</span>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password\n              })}/>\n            <label htmlFor=\"password\">Password</label>\n            <span className=\"red-text\">{errors.password}</span>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password2\n              })}\n            />\n            <label htmlFor=\"password2\">Confirm Password</label>\n            <span className=\"red-text\">{errors.password2}</span>\n\n          </div>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              type=\"submit\"\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n  //   <div className=\"App\">\n  //   <Container maxWidth=\"sm\">\n  //     <form className=\"login-form\" onSubmit={this.login}>\n  //       <TextField\n  //         required\n  //         onChange={this.handleTextChange}\n  //         value={this.state.firstName}\n  //         name=\"firstName\"\n  //         label=\"First Name\"\n  //         type=\"text\" />\n  //         <br/>\n  //       <TextField\n  //         required\n  //         onChange={this.handleTextChange}\n  //         value={this.state.lastName}\n  //         name=\"lastName\"\n  //         label=\"Last Name\"\n  //         type=\"text\" />\n  //         <br/>\n  //       <TextField\n  //         required\n  //         onChange={this.handleTextChange}\n  //         value={this.state.userName}\n  //         name=\"userName\"\n  //         label=\"Username\"\n  //         type=\"text\" \n  //         required />\n  //         <br/>\n  //        <TextField\n  //         required\n  //         onChange={this.handleTextChange}\n  //         value={this.state.password}\n  //         name=\"password\"\n  //         label=\"password\"\n  //         type=\"password\" \n  //        required />\n  //         <br/>\n  //          <TextField\n  //         required\n  //         onChange={this.handleTextChange}\n  //         value={this.state.verifyPassword}\n  //         name=\"verifyPassword\"\n  //         label=\"verify password\"\n  //         type=\"password\" />\n  //         <br/>\n  //         <br/>\n  //       <Button\n  //         type=\"submit\"\n  //         className=\"login-button\"\n  //         variant=\"contained\"\n  //         color=\"primary\">Create User</Button>       \n  //     </form>\n  //   </Container>\n  // </div>\n    )\n  }\n} \n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\n\n//import './App.css';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nimport Home from './components/Home'\nimport IndividualMeal from './components/IndividualMeal';\nimport NavBar from './components/NavBar'\nimport Login from './components/Login'\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Register from './components/Register'\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n\n  return (\n   \n    <div className=\"App\">\n       <Provider store={store}>\n      <Router>\n      <NavBar/>\n         <Switch> \n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/meal/:id\" component={IndividualMeal}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/register\" component={Register}/>\n        {/* <Switch> */}\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}